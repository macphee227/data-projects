{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5+0 Blitz Games on lichess.org (September 2019 - January 2020) "
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "In this project, my goal is to analyze my 5+0 blitz chess games on Lichess.org from September 2019 - January 2020 and visualize/analyze my improvement.\n",
    "\n",
    "I've downloaded a data file (chess_games.pgn) from lichess.org which contains ALL of my chess games since joining the website. In order to analyze to analyze my games I'll need to complete the following steps:\n",
    "\n",
    "1) Wrangle the data into neat and organized dataframes which contain as much useful information as possible\n",
    "2) Export them into excel worksheets or CSV files\n",
    "3) Visualize and analyze the resulting dataset in Tableau"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Step 1) Data Wrangling "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime as dt\n",
    "import re\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading in the .pgn file and saving it as a list of lines\n",
    "\n",
    "list_lines = []\n",
    "with open('chess_games.pgn', 'r') as f:\n",
    "    for line in f:\n",
    "        list_lines.append(line)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "48384"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# length of the list of lines\n",
    "len(list_lines)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2306"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# total number of games played\n",
    "event_count = 0\n",
    "for line in list_lines:\n",
    "    if '[Event' in line:\n",
    "        event_count += 1\n",
    "        \n",
    "event_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['[Event \"Rated Blitz game\"]\\n',\n",
       " '[Site \"https://lichess.org/5t5Hvluo\"]\\n',\n",
       " '[Date \"2020.01.11\"]\\n',\n",
       " '[Round \"-\"]\\n',\n",
       " '[White \"Oddweird\"]\\n',\n",
       " '[Black \"antoshenka13\"]\\n',\n",
       " '[Result \"1-0\"]\\n',\n",
       " '[UTCDate \"2020.01.11\"]\\n',\n",
       " '[UTCTime \"06:04:30\"]\\n',\n",
       " '[WhiteElo \"1273\"]\\n',\n",
       " '[BlackElo \"1306\"]\\n',\n",
       " '[WhiteRatingDiff \"+6\"]\\n',\n",
       " '[BlackRatingDiff \"-7\"]\\n',\n",
       " '[Variant \"Standard\"]\\n',\n",
       " '[TimeControl \"300+0\"]\\n',\n",
       " '[ECO \"A41\"]\\n',\n",
       " '[Termination \"Time forfeit\"]\\n',\n",
       " '\\n',\n",
       " '1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b5 6. Bd3 Bg7 7. Nbd2 O-O 8. Ne4 Bb7 9. Nxf6+ Bxf6 10. O-O e5 11. dxe5 dxe5 12. Bxe5 Bxe5 13. Nxe5 Qg5 14. Nf3 Qg4 15. h3 Qh5 16. Qc2 Bxf3 17. gxf3 Qxh3 18. Be4 Ra7 19. f4 c5 20. Bg2 Qh5 21. Rad1 Nc6 22. Bxc6 f5 23. Rd2 g5 24. Rfd1 gxf4 25. exf4 Rg7+ 26. Bg2 Qh3 27. f3 Qxf3 28. Rf1 Qe3+ 29. Rff2 h5 30. b3 h4 31. Re2 Qe6 32. b4 h3 33. bxc5 Rxg2+ 34. Rxg2+ hxg2 35. Rxg2+ 1-0\\n',\n",
       " '\\n',\n",
       " '\\n',\n",
       " '[Event \"Rated Blitz game\"]\\n',\n",
       " '[Site \"https://lichess.org/a92TptwG\"]\\n',\n",
       " '[Date \"2020.01.11\"]\\n',\n",
       " '[Round \"-\"]\\n']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# preview of the list of lists\n",
    "list_lines[:25]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "48384"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating a pandas.Series object for the list of lines\n",
    "series_lines = pd.Series(list_lines)\n",
    "len(series_lines)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "41466"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# cleaning up the newline characters from the series elements\n",
    "series_lines = series_lines[~(series_lines == '\\n')]\n",
    "series_lines = series_lines.str.replace('\\n', '')\n",
    "len(series_lines)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0               [Event \"Rated Blitz game\"]\n",
       "1    [Site \"https://lichess.org/5t5Hvluo\"]\n",
       "2                      [Date \"2020.01.11\"]\n",
       "3                              [Round \"-\"]\n",
       "4                       [White \"Oddweird\"]\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# preview of the changes made\n",
    "series_lines.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_lines = series_lines.tolist()\n",
    "\n",
    "# separating each game via a list of lists\n",
    "\n",
    "list_of_lists = []\n",
    "intermediate_list = []\n",
    "\n",
    "for line in list_lines:\n",
    "    intermediate_list.append(line)\n",
    "    '''\n",
    "    each line that doesn't start with [ is the move list for a specific game (1. d4 d6 ..) \n",
    "    and is also the last relevant line of data for a given game.\n",
    "    '''\n",
    "    if not line.startswith('['):\n",
    "        list_of_lists.append(intermediate_list)\n",
    "        intermediate_list = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['[Event \"Rated Blitz game\"]',\n",
       " '[Site \"https://lichess.org/5t5Hvluo\"]',\n",
       " '[Date \"2020.01.11\"]',\n",
       " '[Round \"-\"]',\n",
       " '[White \"Oddweird\"]',\n",
       " '[Black \"antoshenka13\"]',\n",
       " '[Result \"1-0\"]',\n",
       " '[UTCDate \"2020.01.11\"]',\n",
       " '[UTCTime \"06:04:30\"]',\n",
       " '[WhiteElo \"1273\"]',\n",
       " '[BlackElo \"1306\"]',\n",
       " '[WhiteRatingDiff \"+6\"]',\n",
       " '[BlackRatingDiff \"-7\"]',\n",
       " '[Variant \"Standard\"]',\n",
       " '[TimeControl \"300+0\"]',\n",
       " '[ECO \"A41\"]',\n",
       " '[Termination \"Time forfeit\"]',\n",
       " '1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b5 6. Bd3 Bg7 7. Nbd2 O-O 8. Ne4 Bb7 9. Nxf6+ Bxf6 10. O-O e5 11. dxe5 dxe5 12. Bxe5 Bxe5 13. Nxe5 Qg5 14. Nf3 Qg4 15. h3 Qh5 16. Qc2 Bxf3 17. gxf3 Qxh3 18. Be4 Ra7 19. f4 c5 20. Bg2 Qh5 21. Rad1 Nc6 22. Bxc6 f5 23. Rd2 g5 24. Rfd1 gxf4 25. exf4 Rg7+ 26. Bg2 Qh3 27. f3 Qxf3 28. Rf1 Qe3+ 29. Rff2 h5 30. b3 h4 31. Re2 Qe6 32. b4 h3 33. bxc5 Rxg2+ 34. Rxg2+ hxg2 35. Rxg2+ 1-0']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# previewing the list of lists; the last game of chess I played on lichess\n",
    "\n",
    "list_of_lists[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type_game</th>\n",
       "      <th>site_link</th>\n",
       "      <th>game_date</th>\n",
       "      <th>round_type</th>\n",
       "      <th>player_white</th>\n",
       "      <th>player_black</th>\n",
       "      <th>result</th>\n",
       "      <th>game_start_date</th>\n",
       "      <th>game_start_time</th>\n",
       "      <th>white_elo</th>\n",
       "      <th>black_elo</th>\n",
       "      <th>white_elo_diff</th>\n",
       "      <th>black_elo_diff</th>\n",
       "      <th>variant</th>\n",
       "      <th>time_control</th>\n",
       "      <th>opening</th>\n",
       "      <th>type_termination</th>\n",
       "      <th>moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[Event \"Rated Blitz game\"]</td>\n",
       "      <td>[Site \"https://lichess.org/5t5Hvluo\"]</td>\n",
       "      <td>[Date \"2020.01.11\"]</td>\n",
       "      <td>[Round \"-\"]</td>\n",
       "      <td>[White \"Oddweird\"]</td>\n",
       "      <td>[Black \"antoshenka13\"]</td>\n",
       "      <td>[Result \"1-0\"]</td>\n",
       "      <td>[UTCDate \"2020.01.11\"]</td>\n",
       "      <td>[UTCTime \"06:04:30\"]</td>\n",
       "      <td>[WhiteElo \"1273\"]</td>\n",
       "      <td>[BlackElo \"1306\"]</td>\n",
       "      <td>[WhiteRatingDiff \"+6\"]</td>\n",
       "      <td>[BlackRatingDiff \"-7\"]</td>\n",
       "      <td>[Variant \"Standard\"]</td>\n",
       "      <td>[TimeControl \"300+0\"]</td>\n",
       "      <td>[ECO \"A41\"]</td>\n",
       "      <td>[Termination \"Time forfeit\"]</td>\n",
       "      <td>1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[Event \"Rated Blitz game\"]</td>\n",
       "      <td>[Site \"https://lichess.org/a92TptwG\"]</td>\n",
       "      <td>[Date \"2020.01.11\"]</td>\n",
       "      <td>[Round \"-\"]</td>\n",
       "      <td>[White \"Mohamedalimedoo\"]</td>\n",
       "      <td>[Black \"Oddweird\"]</td>\n",
       "      <td>[Result \"1-0\"]</td>\n",
       "      <td>[UTCDate \"2020.01.11\"]</td>\n",
       "      <td>[UTCTime \"05:59:05\"]</td>\n",
       "      <td>[WhiteElo \"1200\"]</td>\n",
       "      <td>[BlackElo \"1280\"]</td>\n",
       "      <td>[WhiteRatingDiff \"+7\"]</td>\n",
       "      <td>[BlackRatingDiff \"-7\"]</td>\n",
       "      <td>[Variant \"Standard\"]</td>\n",
       "      <td>[TimeControl \"300+0\"]</td>\n",
       "      <td>[ECO \"A00\"]</td>\n",
       "      <td>[Termination \"Normal\"]</td>\n",
       "      <td>1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[Event \"Rated Blitz game\"]</td>\n",
       "      <td>[Site \"https://lichess.org/oM9lwtc6\"]</td>\n",
       "      <td>[Date \"2020.01.11\"]</td>\n",
       "      <td>[Round \"-\"]</td>\n",
       "      <td>[White \"alislence\"]</td>\n",
       "      <td>[Black \"Oddweird\"]</td>\n",
       "      <td>[Result \"1/2-1/2\"]</td>\n",
       "      <td>[UTCDate \"2020.01.11\"]</td>\n",
       "      <td>[UTCTime \"05:48:48\"]</td>\n",
       "      <td>[WhiteElo \"1209\"]</td>\n",
       "      <td>[BlackElo \"1281\"]</td>\n",
       "      <td>[WhiteRatingDiff \"+1\"]</td>\n",
       "      <td>[BlackRatingDiff \"-1\"]</td>\n",
       "      <td>[Variant \"Standard\"]</td>\n",
       "      <td>[TimeControl \"300+0\"]</td>\n",
       "      <td>[ECO \"B06\"]</td>\n",
       "      <td>[Termination \"Normal\"]</td>\n",
       "      <td>1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[Event \"Rated Blitz game\"]</td>\n",
       "      <td>[Site \"https://lichess.org/ueLhV2O9\"]</td>\n",
       "      <td>[Date \"2020.01.11\"]</td>\n",
       "      <td>[Round \"-\"]</td>\n",
       "      <td>[White \"Oddweird\"]</td>\n",
       "      <td>[Black \"arpr7878\"]</td>\n",
       "      <td>[Result \"1-0\"]</td>\n",
       "      <td>[UTCDate \"2020.01.11\"]</td>\n",
       "      <td>[UTCTime \"05:32:28\"]</td>\n",
       "      <td>[WhiteElo \"1276\"]</td>\n",
       "      <td>[BlackElo \"1210\"]</td>\n",
       "      <td>[WhiteRatingDiff \"+5\"]</td>\n",
       "      <td>[BlackRatingDiff \"-6\"]</td>\n",
       "      <td>[Variant \"Standard\"]</td>\n",
       "      <td>[TimeControl \"300+0\"]</td>\n",
       "      <td>[ECO \"A00\"]</td>\n",
       "      <td>[Termination \"Normal\"]</td>\n",
       "      <td>1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[Event \"Rated Blitz game\"]</td>\n",
       "      <td>[Site \"https://lichess.org/7HHVoqyY\"]</td>\n",
       "      <td>[Date \"2020.01.11\"]</td>\n",
       "      <td>[Round \"-\"]</td>\n",
       "      <td>[White \"Oddweird\"]</td>\n",
       "      <td>[Black \"Iulian204\"]</td>\n",
       "      <td>[Result \"1-0\"]</td>\n",
       "      <td>[UTCDate \"2020.01.11\"]</td>\n",
       "      <td>[UTCTime \"05:27:36\"]</td>\n",
       "      <td>[WhiteElo \"1270\"]</td>\n",
       "      <td>[BlackElo \"1262\"]</td>\n",
       "      <td>[WhiteRatingDiff \"+6\"]</td>\n",
       "      <td>[BlackRatingDiff \"-6\"]</td>\n",
       "      <td>[Variant \"Standard\"]</td>\n",
       "      <td>[TimeControl \"300+0\"]</td>\n",
       "      <td>[ECO \"D00\"]</td>\n",
       "      <td>[Termination \"Normal\"]</td>\n",
       "      <td>1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    type_game                              site_link  \\\n",
       "0  [Event \"Rated Blitz game\"]  [Site \"https://lichess.org/5t5Hvluo\"]   \n",
       "1  [Event \"Rated Blitz game\"]  [Site \"https://lichess.org/a92TptwG\"]   \n",
       "2  [Event \"Rated Blitz game\"]  [Site \"https://lichess.org/oM9lwtc6\"]   \n",
       "3  [Event \"Rated Blitz game\"]  [Site \"https://lichess.org/ueLhV2O9\"]   \n",
       "4  [Event \"Rated Blitz game\"]  [Site \"https://lichess.org/7HHVoqyY\"]   \n",
       "\n",
       "             game_date   round_type               player_white  \\\n",
       "0  [Date \"2020.01.11\"]  [Round \"-\"]         [White \"Oddweird\"]   \n",
       "1  [Date \"2020.01.11\"]  [Round \"-\"]  [White \"Mohamedalimedoo\"]   \n",
       "2  [Date \"2020.01.11\"]  [Round \"-\"]        [White \"alislence\"]   \n",
       "3  [Date \"2020.01.11\"]  [Round \"-\"]         [White \"Oddweird\"]   \n",
       "4  [Date \"2020.01.11\"]  [Round \"-\"]         [White \"Oddweird\"]   \n",
       "\n",
       "             player_black              result         game_start_date  \\\n",
       "0  [Black \"antoshenka13\"]      [Result \"1-0\"]  [UTCDate \"2020.01.11\"]   \n",
       "1      [Black \"Oddweird\"]      [Result \"1-0\"]  [UTCDate \"2020.01.11\"]   \n",
       "2      [Black \"Oddweird\"]  [Result \"1/2-1/2\"]  [UTCDate \"2020.01.11\"]   \n",
       "3      [Black \"arpr7878\"]      [Result \"1-0\"]  [UTCDate \"2020.01.11\"]   \n",
       "4     [Black \"Iulian204\"]      [Result \"1-0\"]  [UTCDate \"2020.01.11\"]   \n",
       "\n",
       "        game_start_time          white_elo          black_elo  \\\n",
       "0  [UTCTime \"06:04:30\"]  [WhiteElo \"1273\"]  [BlackElo \"1306\"]   \n",
       "1  [UTCTime \"05:59:05\"]  [WhiteElo \"1200\"]  [BlackElo \"1280\"]   \n",
       "2  [UTCTime \"05:48:48\"]  [WhiteElo \"1209\"]  [BlackElo \"1281\"]   \n",
       "3  [UTCTime \"05:32:28\"]  [WhiteElo \"1276\"]  [BlackElo \"1210\"]   \n",
       "4  [UTCTime \"05:27:36\"]  [WhiteElo \"1270\"]  [BlackElo \"1262\"]   \n",
       "\n",
       "           white_elo_diff          black_elo_diff               variant  \\\n",
       "0  [WhiteRatingDiff \"+6\"]  [BlackRatingDiff \"-7\"]  [Variant \"Standard\"]   \n",
       "1  [WhiteRatingDiff \"+7\"]  [BlackRatingDiff \"-7\"]  [Variant \"Standard\"]   \n",
       "2  [WhiteRatingDiff \"+1\"]  [BlackRatingDiff \"-1\"]  [Variant \"Standard\"]   \n",
       "3  [WhiteRatingDiff \"+5\"]  [BlackRatingDiff \"-6\"]  [Variant \"Standard\"]   \n",
       "4  [WhiteRatingDiff \"+6\"]  [BlackRatingDiff \"-6\"]  [Variant \"Standard\"]   \n",
       "\n",
       "            time_control      opening              type_termination  \\\n",
       "0  [TimeControl \"300+0\"]  [ECO \"A41\"]  [Termination \"Time forfeit\"]   \n",
       "1  [TimeControl \"300+0\"]  [ECO \"A00\"]        [Termination \"Normal\"]   \n",
       "2  [TimeControl \"300+0\"]  [ECO \"B06\"]        [Termination \"Normal\"]   \n",
       "3  [TimeControl \"300+0\"]  [ECO \"A00\"]        [Termination \"Normal\"]   \n",
       "4  [TimeControl \"300+0\"]  [ECO \"D00\"]        [Termination \"Normal\"]   \n",
       "\n",
       "                                               moves  \n",
       "0  1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...  \n",
       "1  1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...  \n",
       "2  1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...  \n",
       "3  1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...  \n",
       "4  1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating a pandas.DataFrame for the data and naming the columns\n",
    "columns = [\n",
    "    'type_game',\n",
    "    'site_link',\n",
    "    'game_date',\n",
    "    'round_type',\n",
    "    'player_white',\n",
    "    'player_black',\n",
    "    'result',\n",
    "    'game_start_date',\n",
    "    'game_start_time',\n",
    "    'white_elo',\n",
    "    'black_elo',\n",
    "    'white_elo_diff',\n",
    "    'black_elo_diff',\n",
    "    'variant',\n",
    "    'time_control',\n",
    "    'opening',\n",
    "    'type_termination',\n",
    "    'moves'\n",
    "]\n",
    "\n",
    "df = pd.DataFrame(list_of_lists, columns=columns)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping columns that I won't be using\n",
    "df.drop(['site_link', 'round_type', 'game_start_date', 'game_start_time', 'variant', 'type_termination'] ,axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# cleaning up the square brackets and quotations from the data \n",
    "for col in df.columns:\n",
    "    df[col] = df[col].str.replace('[','').str.replace(']','').str.replace('\\n','').str.replace('\"','')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Event Rated Blitz game        1499\n",
       "Event Rated Rapid game         784\n",
       "Event Casual Rapid game         12\n",
       "Event Casual Blitz game          9\n",
       "Event Casual Standard game       2\n",
       "Name: type_game, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# frequency table for the game type\n",
    "df.type_game.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# filtering out only rated blitz games\n",
    "\n",
    "df = df[df.type_game == 'Event Rated Blitz game']\n",
    "df.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1499"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# len should be 1499\n",
    "\n",
    "len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping the type_game columns\n",
    "df.drop(['type_game'] ,axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# cleaning the column values so that they include only neccessary information\n",
    "df.game_date = df.game_date.str.replace('Date','').str.strip()\n",
    "df.player_white = df.player_white.str[6:]\n",
    "df.player_black = df.player_black.str[6:]\n",
    "df.result = df.result.str.replace('Result','').str.strip()\n",
    "df.white_elo = df.white_elo.str.replace('WhiteElo','').str.strip()\n",
    "df.black_elo = df.black_elo.str.replace('BlackElo','').str.strip()\n",
    "df.white_elo_diff = df.white_elo_diff.str.replace('WhiteRatingDiff','').str.strip()\n",
    "df.black_elo_diff = df.black_elo_diff.str.replace('BlackRatingDiff','').str.strip()\n",
    "df.time_control = df.time_control.str.replace('TimeControl','').str.strip()\n",
    "df.opening = df.opening.str.replace('ECO','').str.strip()\n",
    "df.moves = df.moves.str.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>player_white</th>\n",
       "      <th>player_black</th>\n",
       "      <th>result</th>\n",
       "      <th>white_elo</th>\n",
       "      <th>black_elo</th>\n",
       "      <th>white_elo_diff</th>\n",
       "      <th>black_elo_diff</th>\n",
       "      <th>time_control</th>\n",
       "      <th>opening</th>\n",
       "      <th>moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>antoshenka13</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1273</td>\n",
       "      <td>1306</td>\n",
       "      <td>+6</td>\n",
       "      <td>-7</td>\n",
       "      <td>300+0</td>\n",
       "      <td>A41</td>\n",
       "      <td>1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Mohamedalimedoo</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1200</td>\n",
       "      <td>1280</td>\n",
       "      <td>+7</td>\n",
       "      <td>-7</td>\n",
       "      <td>300+0</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>alislence</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>1/2-1/2</td>\n",
       "      <td>1209</td>\n",
       "      <td>1281</td>\n",
       "      <td>+1</td>\n",
       "      <td>-1</td>\n",
       "      <td>300+0</td>\n",
       "      <td>B06</td>\n",
       "      <td>1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>arpr7878</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1276</td>\n",
       "      <td>1210</td>\n",
       "      <td>+5</td>\n",
       "      <td>-6</td>\n",
       "      <td>300+0</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>Iulian204</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1270</td>\n",
       "      <td>1262</td>\n",
       "      <td>+6</td>\n",
       "      <td>-6</td>\n",
       "      <td>300+0</td>\n",
       "      <td>D00</td>\n",
       "      <td>1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date     player_white  player_black   result white_elo black_elo  \\\n",
       "0  2020.01.11         Oddweird  antoshenka13      1-0      1273      1306   \n",
       "1  2020.01.11  Mohamedalimedoo      Oddweird      1-0      1200      1280   \n",
       "2  2020.01.11        alislence      Oddweird  1/2-1/2      1209      1281   \n",
       "3  2020.01.11         Oddweird      arpr7878      1-0      1276      1210   \n",
       "4  2020.01.11         Oddweird     Iulian204      1-0      1270      1262   \n",
       "\n",
       "  white_elo_diff black_elo_diff time_control opening  \\\n",
       "0             +6             -7        300+0     A41   \n",
       "1             +7             -7        300+0     A00   \n",
       "2             +1             -1        300+0     B06   \n",
       "3             +5             -6        300+0     A00   \n",
       "4             +6             -6        300+0     D00   \n",
       "\n",
       "                                               moves  \n",
       "0  1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...  \n",
       "1  1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...  \n",
       "2  1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...  \n",
       "3  1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...  \n",
       "4  1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# previewing the changes, the data is much more readable already\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "300+0    1499\n",
       "Name: time_control, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.time_control.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Since the only blitz games I've played are 5+0 I'll drop this column, I also don't need white_elo_diff or black_elo_diff\n",
    "# as I can create calculated fields later on in Tableau if I need to\n",
    "\n",
    "df.drop(['time_control', 'white_elo_diff', 'black_elo_diff'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>player_white</th>\n",
       "      <th>player_black</th>\n",
       "      <th>result</th>\n",
       "      <th>white_elo</th>\n",
       "      <th>black_elo</th>\n",
       "      <th>opening</th>\n",
       "      <th>moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>antoshenka13</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1273</td>\n",
       "      <td>1306</td>\n",
       "      <td>A41</td>\n",
       "      <td>1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Mohamedalimedoo</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1200</td>\n",
       "      <td>1280</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>alislence</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>1/2-1/2</td>\n",
       "      <td>1209</td>\n",
       "      <td>1281</td>\n",
       "      <td>B06</td>\n",
       "      <td>1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>arpr7878</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1276</td>\n",
       "      <td>1210</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Oddweird</td>\n",
       "      <td>Iulian204</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1270</td>\n",
       "      <td>1262</td>\n",
       "      <td>D00</td>\n",
       "      <td>1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date     player_white  player_black   result white_elo black_elo  \\\n",
       "0  2020.01.11         Oddweird  antoshenka13      1-0      1273      1306   \n",
       "1  2020.01.11  Mohamedalimedoo      Oddweird      1-0      1200      1280   \n",
       "2  2020.01.11        alislence      Oddweird  1/2-1/2      1209      1281   \n",
       "3  2020.01.11         Oddweird      arpr7878      1-0      1276      1210   \n",
       "4  2020.01.11         Oddweird     Iulian204      1-0      1270      1262   \n",
       "\n",
       "  opening                                              moves  \n",
       "0     A41  1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...  \n",
       "1     A00  1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...  \n",
       "2     B06  1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...  \n",
       "3     A00  1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...  \n",
       "4     D00  1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0-1        725\n",
       "1-0        709\n",
       "1/2-1/2     65\n",
       "Name: result, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# making sure that the result column only includes win, loss or draw values\n",
    "df.result.value_counts()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I'm going to create 4 new columns:\n",
    "\n",
    "played_as\n",
    "elo\n",
    "opponent\n",
    "opponent_elo\n",
    "\n",
    "..and eventually drop:\n",
    "\n",
    "player_white\n",
    "player_black\n",
    "white_elo\n",
    "black_elo\n",
    "\n",
    "This will be easier to read in order to aggregate/analyze my own personal. I'll be able to look at each observation (game) and see what colour I played, what my rating was, my opponents name and their rating."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# setting which color I played\n",
    "df['played_as'] = df.player_white.apply(lambda x: 'White' if x == 'Oddweird' else 'Black')\n",
    "\n",
    "# setting my current elo for each game at the time the game was played\n",
    "df['elo'] = np.nan\n",
    "df.loc[df['played_as'] == 'White', 'elo'] = df.white_elo\n",
    "df.loc[df['played_as'] == 'Black', 'elo'] = df.black_elo\n",
    "\n",
    "# setting my opponent for each game\n",
    "df['opponent'] = np.nan\n",
    "df.loc[df['played_as'] == 'White', 'opponent'] = df.player_black\n",
    "df.loc[df['played_as'] == 'Black', 'opponent'] = df.player_white\n",
    "\n",
    "# setting my opponent's elo for each game at the time the game was played\n",
    "df['opponent_elo'] = np.nan\n",
    "df.loc[df['played_as'] == 'White', 'opponent_elo'] = df.black_elo\n",
    "df.loc[df['played_as'] == 'Black', 'opponent_elo'] = df.white_elo\n",
    "\n",
    "# dropping columns which are no longer needed\n",
    "df.drop(['player_white', 'player_black', 'white_elo', 'black_elo'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>result</th>\n",
       "      <th>opening</th>\n",
       "      <th>moves</th>\n",
       "      <th>played_as</th>\n",
       "      <th>elo</th>\n",
       "      <th>opponent</th>\n",
       "      <th>opponent_elo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>1-0</td>\n",
       "      <td>A41</td>\n",
       "      <td>1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...</td>\n",
       "      <td>White</td>\n",
       "      <td>1273</td>\n",
       "      <td>antoshenka13</td>\n",
       "      <td>1306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>1-0</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...</td>\n",
       "      <td>Black</td>\n",
       "      <td>1280</td>\n",
       "      <td>Mohamedalimedoo</td>\n",
       "      <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>1/2-1/2</td>\n",
       "      <td>B06</td>\n",
       "      <td>1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...</td>\n",
       "      <td>Black</td>\n",
       "      <td>1281</td>\n",
       "      <td>alislence</td>\n",
       "      <td>1209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>1-0</td>\n",
       "      <td>A00</td>\n",
       "      <td>1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...</td>\n",
       "      <td>White</td>\n",
       "      <td>1276</td>\n",
       "      <td>arpr7878</td>\n",
       "      <td>1210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>1-0</td>\n",
       "      <td>D00</td>\n",
       "      <td>1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...</td>\n",
       "      <td>White</td>\n",
       "      <td>1270</td>\n",
       "      <td>Iulian204</td>\n",
       "      <td>1262</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date   result opening  \\\n",
       "0  2020.01.11      1-0     A41   \n",
       "1  2020.01.11      1-0     A00   \n",
       "2  2020.01.11  1/2-1/2     B06   \n",
       "3  2020.01.11      1-0     A00   \n",
       "4  2020.01.11      1-0     D00   \n",
       "\n",
       "                                               moves played_as   elo  \\\n",
       "0  1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...     White  1273   \n",
       "1  1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...     Black  1280   \n",
       "2  1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...     Black  1281   \n",
       "3  1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...     White  1276   \n",
       "4  1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...     White  1270   \n",
       "\n",
       "          opponent opponent_elo  \n",
       "0     antoshenka13         1306  \n",
       "1  Mohamedalimedoo         1200  \n",
       "2        alislence         1209  \n",
       "3         arpr7878         1210  \n",
       "4        Iulian204         1262  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I'm going to change the result column so it simply says win, loss or draw based based on the colour that I played as well as the current value in the result columnt (1-0, 0-1, 1/2-1/2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defining a new column for game results\n",
    "df['new_result'] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to determine win/loss/draw for games I played as white \n",
    "# based on the current value in the result column\n",
    "def white_result(s):\n",
    "    if s == '1-0':\n",
    "        return 'Win'\n",
    "    if s == '0-1':\n",
    "        return 'Loss'\n",
    "    return 'Draw'\n",
    "\n",
    "# applying the function to the result column for games where I played white \n",
    "# and setting new values in the new_result column\n",
    "df.loc[df.played_as == 'White', 'new_result'] = df.loc[df.played_as == 'White', 'result'].apply(white_result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to determine win/loss/draw for games I played as black \n",
    "# based on the current value in the result column\n",
    "def black_result(s):\n",
    "    if s == '1-0':\n",
    "        return 'Loss'\n",
    "    if s == '0-1':\n",
    "        return 'Win'\n",
    "    return 'Draw'\n",
    "\n",
    "# applying the function to the result column for games where I played black \n",
    "# and setting new values in the new_result column\n",
    "df.loc[df.played_as == 'Black', 'new_result'] = df.loc[df.played_as == 'Black', 'result'].apply(black_result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping the original result column which I don't need anymore and renaming the new_result column to result\n",
    "df.drop(['result'], axis=1, inplace=True)\n",
    "df.rename({'new_result': 'result'}, axis=1, inplace=True)\n",
    "\n",
    "# re-ordering the remaining columns for intuitive readability\n",
    "col_order = [\n",
    "    'game_date',\n",
    "    'played_as',\n",
    "    'elo',\n",
    "    'opponent',\n",
    "    'opponent_elo',\n",
    "    'opening',\n",
    "    'result',\n",
    "    'moves'\n",
    "]\n",
    "\n",
    "df = df[col_order]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>played_as</th>\n",
       "      <th>elo</th>\n",
       "      <th>opponent</th>\n",
       "      <th>opponent_elo</th>\n",
       "      <th>opening</th>\n",
       "      <th>result</th>\n",
       "      <th>moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>White</td>\n",
       "      <td>1273</td>\n",
       "      <td>antoshenka13</td>\n",
       "      <td>1306</td>\n",
       "      <td>A41</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Black</td>\n",
       "      <td>1280</td>\n",
       "      <td>Mohamedalimedoo</td>\n",
       "      <td>1200</td>\n",
       "      <td>A00</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>Black</td>\n",
       "      <td>1281</td>\n",
       "      <td>alislence</td>\n",
       "      <td>1209</td>\n",
       "      <td>B06</td>\n",
       "      <td>Draw</td>\n",
       "      <td>1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>White</td>\n",
       "      <td>1276</td>\n",
       "      <td>arpr7878</td>\n",
       "      <td>1210</td>\n",
       "      <td>A00</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020.01.11</td>\n",
       "      <td>White</td>\n",
       "      <td>1270</td>\n",
       "      <td>Iulian204</td>\n",
       "      <td>1262</td>\n",
       "      <td>D00</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date played_as   elo         opponent opponent_elo opening result  \\\n",
       "0  2020.01.11     White  1273     antoshenka13         1306     A41    Win   \n",
       "1  2020.01.11     Black  1280  Mohamedalimedoo         1200     A00   Loss   \n",
       "2  2020.01.11     Black  1281        alislence         1209     B06   Draw   \n",
       "3  2020.01.11     White  1276         arpr7878         1210     A00    Win   \n",
       "4  2020.01.11     White  1270        Iulian204         1262     D00    Win   \n",
       "\n",
       "                                               moves  \n",
       "0  1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6 5. c3 b...  \n",
       "1  1. e3 g6 2. d3 Bg7 3. Be2 d6 4. Nf3 Bg4 5. Nc3...  \n",
       "2  1. e4 g6 2. Nf3 d6 3. Bc4 Bg7 4. Ng5 e6 5. Qf3...  \n",
       "3  1. c3 e5 2. e3 d5 3. Nf3 e4 4. Nd4 Nf6 5. Be2 ...  \n",
       "4  1. d4 d5 2. Bf4 e6 3. Nf3 Nf6 4. e3 Bd6 5. Bxd...  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# preving changes to the result column\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# converting the date values in the game_date column from YYYY.mm.dd to YYYY-mm-dd \n",
    "# using dt.datetime.strptime and strftime from the datetime library\n",
    "df['game_date'] = df.game_date.apply(lambda x: dt.datetime.strptime(x,'%Y.%m.%d').strftime('%Y-%m-%d'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# converting the values in the elo and opponent_elo column to integers for aggregations\n",
    "df['elo'] = df.elo.astype(int)\n",
    "df['opponent_elo'] = df.opponent_elo.astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reversing the rows of the DataFrame and resetting the index so that plots using\n",
    "# time series will be more intuitive\n",
    "df = df.iloc[::-1].reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>played_as</th>\n",
       "      <th>elo</th>\n",
       "      <th>opponent</th>\n",
       "      <th>opponent_elo</th>\n",
       "      <th>opening</th>\n",
       "      <th>result</th>\n",
       "      <th>moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1500</td>\n",
       "      <td>treap</td>\n",
       "      <td>1394</td>\n",
       "      <td>A00</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1264</td>\n",
       "      <td>DARIORITUM</td>\n",
       "      <td>1265</td>\n",
       "      <td>C51</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>White</td>\n",
       "      <td>1144</td>\n",
       "      <td>sameh2pho</td>\n",
       "      <td>1127</td>\n",
       "      <td>A01</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1228</td>\n",
       "      <td>Etaash</td>\n",
       "      <td>1207</td>\n",
       "      <td>A40</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1151</td>\n",
       "      <td>yevbar</td>\n",
       "      <td>1227</td>\n",
       "      <td>C01</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date played_as   elo    opponent  opponent_elo opening result  \\\n",
       "0  2019-09-01     Black  1500       treap          1394     A00   Loss   \n",
       "1  2019-09-01     Black  1264  DARIORITUM          1265     C51   Loss   \n",
       "2  2019-09-01     White  1144   sameh2pho          1127     A01    Win   \n",
       "3  2019-09-02     Black  1228      Etaash          1207     A40   Loss   \n",
       "4  2019-09-02     Black  1151      yevbar          1227     C01   Loss   \n",
       "\n",
       "                                               moves  \n",
       "0  1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...  \n",
       "1  1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...  \n",
       "2  1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...  \n",
       "3  1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...  \n",
       "4  1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# previwing the changes\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I need to write a function which takes in a long string (list of moves) and breaks them up into individual moves so that I can count them and find out how many moves were played in each game. I'll have to use some sort of regex.\n",
    "\n",
    "Example:\n",
    "\n",
    "'1. d4 d6 2. Bf4 Nf6 3. Nf3 g6 4. e3 a6'\n",
    "\n",
    "To something like this:\n",
    "\n",
    "['1. d4 d6', '2. Bf4 Nf6', '3. Nf3 g6', '4. e3 a6']\n",
    "\n",
    "By taking the length of this list I can tell the number of moves that were made in the game. This is also useful information as I can tell if the game made it past development or into lategame. We can also tell if a game ended by checkmate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O e6 6. Bg5 h6 7. Bxf6 Qxf6 8. Nbd2 c4 9. c3 cxd3 10. exd3 b4 11. Qa4+ Nd7 12. Qc6 Rb8 13. d4 Bb7 14. Qa4 Be7 15. Ne5 Rd8 16. Ndf3 Bd6 17. Nxd7 Rxd7 18. Ne5 Bxe5 19. dxe5 Qxe5 20. Qxb4 Qd6 21. Qxd6 Rxd6 22. c4 d4 23. Bxb7 a5 24. Rfd1 e5 25. Rac1 f6 26. c5 Rd5 27. Bxd5 Ke7 28. c6 Rd8 29. Bc4 Kd6 30. Ba6 e4 31. c7 Rc8 32. Bxc8 Kd5 33. Ba6 e3 34. c8=Q f5 35. Qc5+ Ke4 36. Bb7# 1-0'"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "example = df.moves[0]\n",
    "example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['',\n",
       " ' g3 d5 ',\n",
       " ' Bg2 Nf6 ',\n",
       " ' Nf3 c5 ',\n",
       " ' d3 b5 ',\n",
       " ' O-O e6 ',\n",
       " ' Bg5 h6 ',\n",
       " ' Bxf6 Qxf6 ',\n",
       " ' Nbd2 c4 ',\n",
       " ' c3 cxd3 ',\n",
       " ' exd3 b4 ',\n",
       " ' Qa4+ Nd7 ',\n",
       " ' Qc6 Rb8 ',\n",
       " ' d4 Bb7 ',\n",
       " ' Qa4 Be7 ',\n",
       " ' Ne5 Rd8 ',\n",
       " ' Ndf3 Bd6 ',\n",
       " ' Nxd7 Rxd7 ',\n",
       " ' Ne5 Bxe5 ',\n",
       " ' dxe5 Qxe5 ',\n",
       " ' Qxb4 Qd6 ',\n",
       " ' Qxd6 Rxd6 ',\n",
       " ' c4 d4 ',\n",
       " ' Bxb7 a5 ',\n",
       " ' Rfd1 e5 ',\n",
       " ' Rac1 f6 ',\n",
       " ' c5 Rd5 ',\n",
       " ' Bxd5 Ke7 ',\n",
       " ' c6 Rd8 ',\n",
       " ' Bc4 Kd6 ',\n",
       " ' Ba6 e4 ',\n",
       " ' c7 Rc8 ',\n",
       " ' Bxc8 Kd5 ',\n",
       " ' Ba6 e3 ',\n",
       " ' c8=Q f5 ',\n",
       " ' Qc5+ Ke4 ',\n",
       " ' Bb7# 1-0']"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# using a regex to split up the moves list based on the \\d. before each move (1. 2. 3. .. 46.)\n",
    "move_list = re.split(r'\\d+\\.', example)\n",
    "move_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "37"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# this method adds 1 extra 'move' in the form of a blank element at the beginning of the list\n",
    "len(move_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "def count_moves(s):\n",
    "    move_list = re.split(r'\\d+\\.', s)\n",
    "    new_move_list = []\n",
    "    i = 1\n",
    "    \n",
    "    for move in move_list:\n",
    "        # skipping the first blank element in the list of moves\n",
    "        if move == '':\n",
    "            continue\n",
    "        new_move_list.append(str(i) + '. ' + move.strip())\n",
    "        i += 1\n",
    "    return len(new_move_list)\n",
    "\n",
    "df['num_moves'] = df.moves.apply(count_moves)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>played_as</th>\n",
       "      <th>elo</th>\n",
       "      <th>opponent</th>\n",
       "      <th>opponent_elo</th>\n",
       "      <th>opening</th>\n",
       "      <th>result</th>\n",
       "      <th>moves</th>\n",
       "      <th>num_moves</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1500</td>\n",
       "      <td>treap</td>\n",
       "      <td>1394</td>\n",
       "      <td>A00</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1264</td>\n",
       "      <td>DARIORITUM</td>\n",
       "      <td>1265</td>\n",
       "      <td>C51</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>White</td>\n",
       "      <td>1144</td>\n",
       "      <td>sameh2pho</td>\n",
       "      <td>1127</td>\n",
       "      <td>A01</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1228</td>\n",
       "      <td>Etaash</td>\n",
       "      <td>1207</td>\n",
       "      <td>A40</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1151</td>\n",
       "      <td>yevbar</td>\n",
       "      <td>1227</td>\n",
       "      <td>C01</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    game_date played_as   elo    opponent  opponent_elo opening result  \\\n",
       "0  2019-09-01     Black  1500       treap          1394     A00   Loss   \n",
       "1  2019-09-01     Black  1264  DARIORITUM          1265     C51   Loss   \n",
       "2  2019-09-01     White  1144   sameh2pho          1127     A01    Win   \n",
       "3  2019-09-02     Black  1228      Etaash          1207     A40   Loss   \n",
       "4  2019-09-02     Black  1151      yevbar          1227     C01   Loss   \n",
       "\n",
       "                                               moves  num_moves  \n",
       "0  1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...         36  \n",
       "1  1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...         35  \n",
       "2  1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...         19  \n",
       "3  1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...         31  \n",
       "4  1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...         26  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# re-ordering the columns one last time for the final DataFrame\n",
    "col_order = [\n",
    "    'game_date',\n",
    "    'played_as',\n",
    "    'elo',\n",
    "    'opponent',\n",
    "    'opponent_elo',\n",
    "    'opening',\n",
    "    'num_moves',\n",
    "    'result',\n",
    "    'moves'\n",
    "]\n",
    "\n",
    "df = df[col_order]\n",
    "\n",
    "# renaming the columns for exporting to Excel/Tableau\n",
    "map = {\n",
    "    'game_date': 'Date',\n",
    "    'played_as': 'ColorPieces',\n",
    "    'elo': 'ELO',\n",
    "    'opponent': 'Opponent',\n",
    "    'opponent_elo': 'OpponentELO',\n",
    "    'opening': 'Opening',\n",
    "    'num_moves': 'NumMoves',\n",
    "    'result': 'Result',\n",
    "    'moves': 'PGN'\n",
    "}\n",
    "\n",
    "df.rename(map, axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>ColorPieces</th>\n",
       "      <th>ELO</th>\n",
       "      <th>Opponent</th>\n",
       "      <th>OpponentELO</th>\n",
       "      <th>Opening</th>\n",
       "      <th>NumMoves</th>\n",
       "      <th>Result</th>\n",
       "      <th>PGN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1500</td>\n",
       "      <td>treap</td>\n",
       "      <td>1394</td>\n",
       "      <td>A00</td>\n",
       "      <td>36</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1264</td>\n",
       "      <td>DARIORITUM</td>\n",
       "      <td>1265</td>\n",
       "      <td>C51</td>\n",
       "      <td>35</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>White</td>\n",
       "      <td>1144</td>\n",
       "      <td>sameh2pho</td>\n",
       "      <td>1127</td>\n",
       "      <td>A01</td>\n",
       "      <td>19</td>\n",
       "      <td>Win</td>\n",
       "      <td>1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1228</td>\n",
       "      <td>Etaash</td>\n",
       "      <td>1207</td>\n",
       "      <td>A40</td>\n",
       "      <td>31</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1151</td>\n",
       "      <td>yevbar</td>\n",
       "      <td>1227</td>\n",
       "      <td>C01</td>\n",
       "      <td>26</td>\n",
       "      <td>Loss</td>\n",
       "      <td>1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date ColorPieces   ELO    Opponent  OpponentELO Opening  NumMoves  \\\n",
       "0  2019-09-01       Black  1500       treap         1394     A00        36   \n",
       "1  2019-09-01       Black  1264  DARIORITUM         1265     C51        35   \n",
       "2  2019-09-01       White  1144   sameh2pho         1127     A01        19   \n",
       "3  2019-09-02       Black  1228      Etaash         1207     A40        31   \n",
       "4  2019-09-02       Black  1151      yevbar         1227     C01        26   \n",
       "\n",
       "  Result                                                PGN  \n",
       "0   Loss  1. g3 d5 2. Bg2 Nf6 3. Nf3 c5 4. d3 b5 5. O-O ...  \n",
       "1   Loss  1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 4. b4 Bb6 5. O-...  \n",
       "2    Win  1. b3 e5 2. Bb2 d6 3. e4 Nf6 4. Bb5+ c6 5. Bc4...  \n",
       "3   Loss  1. d4 c6 2. Bf4 d5 3. e3 Bf5 4. Nf3 e6 5. Bd3 ...  \n",
       "4   Loss  1. e4 e6 2. d4 d5 3. exd5 exd5 4. Nc3 Nf6 5. N...  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I'll remove the PGN column for now.. but later on I'm gonna come back and do some work with it/create a parser so I can draw more insights from my games."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# keeping all columns but the PGN column\n",
    "df = df.loc[:,'Date':'Result']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating a unique identified column\n",
    "df['Id'] = range(1, len(df)+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "# re-ordering columns \n",
    "col_order = [\n",
    "    'Id',\n",
    "    'Date',\n",
    "    'ColorPieces',\n",
    "    'ELO',\n",
    "    'Opponent',\n",
    "    'OpponentELO',\n",
    "    'Opening',\n",
    "    'NumMoves',\n",
    "    'Result'\n",
    "]\n",
    "\n",
    "df = df[col_order]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating a second DataFrame called elo_data which will store my End-of-Day ELO for every day that \n",
    "# Using this I can easily visualize an accurate time series of ELO over time without having to do much work in Tableau\n",
    "elo_data = df.drop_duplicates(keep='last', subset='Date')[['Date', 'ELO']].set_index('Date')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Step 2) Exporting the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ELO</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-09-01</th>\n",
       "      <td>1144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-02</th>\n",
       "      <td>977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-03</th>\n",
       "      <td>993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-04</th>\n",
       "      <td>969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-05</th>\n",
       "      <td>985</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             ELO\n",
       "Date            \n",
       "2019-09-01  1144\n",
       "2019-09-02   977\n",
       "2019-09-03   993\n",
       "2019-09-04   969\n",
       "2019-09-05   985"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the first DataFrame to be exported to Excel (sheel 1)\n",
    "elo_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Date</th>\n",
       "      <th>ColorPieces</th>\n",
       "      <th>ELO</th>\n",
       "      <th>Opponent</th>\n",
       "      <th>OpponentELO</th>\n",
       "      <th>Opening</th>\n",
       "      <th>NumMoves</th>\n",
       "      <th>Result</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1500</td>\n",
       "      <td>treap</td>\n",
       "      <td>1394</td>\n",
       "      <td>A00</td>\n",
       "      <td>36</td>\n",
       "      <td>Loss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>Black</td>\n",
       "      <td>1264</td>\n",
       "      <td>DARIORITUM</td>\n",
       "      <td>1265</td>\n",
       "      <td>C51</td>\n",
       "      <td>35</td>\n",
       "      <td>Loss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2019-09-01</td>\n",
       "      <td>White</td>\n",
       "      <td>1144</td>\n",
       "      <td>sameh2pho</td>\n",
       "      <td>1127</td>\n",
       "      <td>A01</td>\n",
       "      <td>19</td>\n",
       "      <td>Win</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1228</td>\n",
       "      <td>Etaash</td>\n",
       "      <td>1207</td>\n",
       "      <td>A40</td>\n",
       "      <td>31</td>\n",
       "      <td>Loss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2019-09-02</td>\n",
       "      <td>Black</td>\n",
       "      <td>1151</td>\n",
       "      <td>yevbar</td>\n",
       "      <td>1227</td>\n",
       "      <td>C01</td>\n",
       "      <td>26</td>\n",
       "      <td>Loss</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id        Date ColorPieces   ELO    Opponent  OpponentELO Opening  \\\n",
       "0   1  2019-09-01       Black  1500       treap         1394     A00   \n",
       "1   2  2019-09-01       Black  1264  DARIORITUM         1265     C51   \n",
       "2   3  2019-09-01       White  1144   sameh2pho         1127     A01   \n",
       "3   4  2019-09-02       Black  1228      Etaash         1207     A40   \n",
       "4   5  2019-09-02       Black  1151      yevbar         1227     C01   \n",
       "\n",
       "   NumMoves Result  \n",
       "0        36   Loss  \n",
       "1        35   Loss  \n",
       "2        19    Win  \n",
       "3        31   Loss  \n",
       "4        26   Loss  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the second DataFrame to be exported to Excel (sheet 2)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "# exporting DataFrames to excel\n",
    "with pd.ExcelWriter('chess_games.xlsx') as writer:\n",
    "    elo_data.to_excel(writer, sheet_name='elo_data')\n",
    "    df.to_excel(writer, sheet_name='game_data', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Step 3) Using Tableau for visualizations and insights"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<img src=\"chessELO.png\">\n",
       "<img src=\"chessOPENINGS.png\">\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%html\n",
    "<img src=\"chessELO.png\">\n",
    "<img src=\"chessOPENINGS.png\">"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Here are two major things that I can take away from these visualizations:\n",
    "\n",
    "1)\n",
    "\n",
    "When I first started playing blitz chess (5+0) in September - I lost so many games in a row that my ELO plummeted all the way down to 851. Since then, my ELO has risen consistently and I'm now hovering around the 1250-1300 ELO range. This certainly isn't an ELO to brag about - however it shows me that by learning and following chess principles I've been able to improve and rise in the rankings gradually.\n",
    "\n",
    "2) \n",
    "\n",
    "My opening repertoire has become more narrow over time, meaning that I play more of the same opening strategies that I'm familliar with as opposed to experimenting with something new. When comparing the months of October and December it can be seen that in October - my games involved around 14 different categories of opening sequences (including a whopping 80 games of C00 - the French Defense, which I don't even use anymore!) while in December my games involved only 6 different opening sequences. Furthermore, in January my games only involed 2 different opening sequences!\n",
    "\n",
    "It's true that I probably played more Chess in October and November than in December and January, however I also know for a fact that I am more conservative with my openings now - only playing a handful, and it's the deeper knowledge of these openings that leads to better positions/tactics and a better win/loss record overall. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Thanks for reading! "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
